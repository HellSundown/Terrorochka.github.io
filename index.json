[{"authors":null,"categories":null,"content":"Павлова Полина - студентка Росийского Университета Дружбы Народов. Её направление подготовки - прикладная информатика в подразделении факультет физико-математических и естественных наук.\n  Download my resumé.\n","date":1607817600,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1607817600,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Павлова Полина - студентка Росийского Университета Дружбы Народов. Её направление подготовки - прикладная информатика в подразделении факультет физико-математических и естественных наук.\n  Download my resumé.","tags":null,"title":"Полина Павлова","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Wowchemy’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://example.com/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":[],"categories":[],"content":"Общая информация Научное программирование — высокоориентированный стиль программирования для научных расчетов. От других видов программирования его отличают предельные корректность и стабильность конечного продукта, строгое разделение научной и интерфейсной частей, индивидуальность алгоритмов, а также преобладание эффективности над универсальностью.\nНаучное программирование лежит в основе любого современного глобального исследования. Все передовые технологии — от квантовых компьютеров до космических программ — были бы невозможны без специалистов в области научного программирования, способных предоставить ученым надежный и точный инструмент для совершения открытий.\nРяд отраслей науки непосредственно зависят от уровня развития научного программирования. Так, своего исполнения ждут беспилотный транспорт, «умные» системы управления городским и сельским хозяйством, фондовыми биржами; ждут робототехника, генная инженерия, искусственный интеллект, превосходящий возможности человека.\nСпециализации Ученые используют различные языки программирования, выбор которых зависит от типа задачи и предпочтений автора. Исторически первым высокоуровневым языком программирования является Fortran, на нем написано много отлаженных библиотек математической статистики и библиотек для решения дифференциальных уравнений, что актуально для экономики и биологии соответственно.\nБолее простым синтаксисом обладает Python, также подходящий для программирования математических вычислений. Язык Python привлекается для обработки данных в математике, физике, экономике, биологии, химии и умеет работать с некоторыми другими «научными» языками: Fortran, C++, C#.\nВ свою очередь C# позволяет программировать на платформе .NET, адаптировать программу к общеязыковой исполняющей среде (CLR) и ускорить разработку в рамках оперативных научных сессий.\nПримеры Линейная алгебра Научные языки программирования предоставляют возможности для работы с линейной алгеброй. Например, следующая программа Julia решает систему линейных уравнений:\nA = rand (20,20 ) # A - матрица 20x20 b = rand (20) # b - вектор из 20 элементов x = A \\ b # x - решение A *x = b Работа с большими векторами и матрицами является ключевой особенностью этих языков, поскольку линейная алгебра закладывает основу для математической оптимизации, которая, в свою очередь, позволяет использовать такие основные приложения, как глубокое обучение.\nМатематическая оптимизация В научном языке программирования мы можем вычислить оптимумы функций с синтаксисом, близким к математическому языку. Например, следующий код Джулии находит минимум полинома.\nиспользование Optim P(x,y) = x^2-3 x*y + 5 y^2-7 y + 3 z₀ = [ 0.0 0.0 ] # начальная точка для алгоритма оптимизации optimize(z -\u0026gt; P(z...), z₀, Newton(); autodiff = :forward) В данном примере используется метод минимизации Ньютона. Современные научные языки программирования используют автоматическое дифференцирование для вычисления градиентов и гессианов функции, заданной в качестве входных данных; ср. дифференцируемое программирование. Здесь для этой задачи было выбрано автоматическое прямое дифференцирование. Более старые научные языки программирования, такие как почтенный Фортран, потребовали бы, чтобы программист передал рядом с оптимизируемой функцией функцию, которая вычисляет градиент, и функцию, которая вычисляет гессиан.\n","date":1653468640,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1653468640,"objectID":"c4b5b1fd2db8f45f44c457462a56f57e","permalink":"https://example.com/post/sci-lan/","publishdate":"2022-05-25T11:50:40+03:00","relpermalink":"/post/sci-lan/","section":"post","summary":"Научное программирование != программирование?","tags":[],"title":"Языки научного программирования.","type":"post"},{"authors":[],"categories":[],"content":"Что нового:  Было изучено программирование в командном процессоре ОС UNIX. Командные файлы Было изучено программирование в командном процессоре ОС UNIX. Ветвления и циклы  ","date":1653468316,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1653468316,"objectID":"eaed120ccab24b8afec6508072961b08","permalink":"https://example.com/post/week-post-4/","publishdate":"2022-05-25T11:45:16+03:00","relpermalink":"/post/week-post-4/","section":"post","summary":"Пост об очень непростой неделе ","tags":[],"title":"Прошедшая неделя 4","type":"post"},{"authors":[],"categories":[],"content":"Оформление отчета по лабораторной работе Лабораторная работа является небольшой научно-исследовательской работой, которую и оформлять следует по всем утверждённым требованиям. При подготовке отчета по лабораторной работе вы освоите ряд важных элементов, которые в дальнейшем пригодятся вам при написании курсовой и дипломной работы.\nСтруктура отчёта Согласно ГОСТ 7.32-2001, любая научно-исследовательская работа должна обязательно содержать следующие элементы:\n титульный лист; реферат; введение; основную часть; заключение.  Также ГОСТ рекомендует включить в работу и такие элементы:\n список исполнителей; содержание; нормативные ссылки; определения; обозначения и сокращения; список использованных источников; приложения.  Если вы проводите сложную работу, выполняемую в несколько этапов, то вам может понадобиться включить в работу часть или все элементы второго списка.\nСодержание основных элементов отчета  Титульный лист. Первый лист работы оформляется строго по образцу, который обычно приводится в методических пособиях по вашему предмету. В нем не просто требуется указать такие элементы, как название образовательного учреждения, вид работы и сведения об исполнителе, но и расположить их в строгом соответствии со стандартами. Реферат. Реферат фактически является кратким представлением всего вашего отчета и содержит ряд статистических сведений. В нем нужно указать количество частей, страниц работы, иллюстраций, приложений, таблиц, использованных литературных источников и приложений. Здесь же приводится перечень ключевых слов работы и собственно текст реферата. Последний подразумевает основные элементы работы от поставленных целей до результатов и рекомендаций по их внедрению. В практике вузов в отчеты по лабораторным работам реферат обычно не включают. Введение. Во введении типовой лабораторной работы обычно прописывают цели проводимого исследования и задачи, выполнение которых поможет достичь поставленных целей. В то же время существуют работы, в которых студенты становятся настоящими первооткрывателями. Приходилось ли вам хотя бы однажды испытывать чувство крайнего любопытства и нетерпения при проведении лабораторной работы? Ощущать, что буквально через пару минут вы найдете ответ на вопрос, на который еще никто и никогда не находил ответа? Именно для таких исследований пишется развернутое введение с доказательством актуальности и новизны изучаемой темы. Чтобы действительно провести исследование в той области, в которой, как говорится, еще не ступала нога человека, во введении вам понадобится привести оценку современного состояния рассматриваемой проблемы и обосновать необходимость ее решения. Основная часть. Так как в разных вузах и в разных дисциплинах существуют свои тонкости проведения лабораторных работ, содержание основной части подробно описывают в соответствующих методичках. Важно, чтобы в этом разделе работы была отражена ее суть, описана методика и результаты проделанной работы.  В основной части прописывают следующие элементы:\n цели проводимого исследования; задачи, выполнение которых поможет достичь поставленных целей; ход работы, в котором описываются выполненные действия; прочие разделы, предусмотренные методическими материалами по изучаемой дисциплине. Заключение. В этой части работы вам потребуется сделать выводы по полученным в ходе лабораторной работы результатам. Для этого оцените, насколько полно выполнены поставленные задачи. В сложных работах могут присутствовать и другие элементы, например, рекомендации для дальнейшего применения результатов проведённой работы.  ","date":1652253780,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1652253780,"objectID":"83d92020d45247fc29faec2c09bfeb05","permalink":"https://example.com/post/about_report/","publishdate":"2022-05-11T10:23:00+03:00","relpermalink":"/post/about_report/","section":"post","summary":"Как это делать правильно","tags":[],"title":"Оформление отчёта","type":"post"},{"authors":[],"categories":[],"content":"Что нового:  Был изучен текстовый редактор emacs Были получены навыки программирования в командном процессоре ОС UNIX  ","date":1652253595,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1652253595,"objectID":"e3a6aa52e5ea829744d2632a95133fbc","permalink":"https://example.com/post/week-post-3/","publishdate":"2022-05-11T10:19:55+03:00","relpermalink":"/post/week-post-3/","section":"post","summary":"Пост об очень непростой неделе ","tags":[],"title":"Прошедшая неделя 3","type":"post"},{"authors":[],"categories":[],"content":"Markdown: что это и кому нужно Для всех, кто пишет контент, сайты и программы. В вебе есть стандартный язык разметки — HTML. Его понимают браузеры, но человеку читать чистый HTML-код тяжело — мешают теги и обилие служебной информации.\nЧтобы понять, почему так, нужно вспомнить истоки HTML. Когда его только создавали, у него была задача описывать гипертекстовые документы: то есть документы, в которых будет текст и гиперссылки. При этом передаваться он должен был по очень медленным каналам. Первые HTML-страницы были минималистичными: только текст, заголовки, таблицы и редкие ссылки.\nПостепенно веб развивался, сайты становились всё сложнее: появлялся дизайн, меню, навигация, картинки, табличная вёрстка. Но всё это по-прежнему выражалось языком простых текстовых документов. В него добавлялись новые теги, он усложнялся, и вот дорос до тех джунглей, в которых нам приходится работать сейчас.\nЧто такое Markdown Markdown — это язык текстовой разметки документов. Его придумали в 2004 году блогер Джон Грубер и интернет-активист Аарон Шварц, чтобы быстро форматировать статьи. Требования к языку у них были такие:\n Чем проще — тем лучше. Документы с этой разметкой можно перевести в красиво отформатированный вид, как на веб-странице. Исходный текст материала должен оставаться читаемым даже без преобразования в веб-страницу.  В результате у них получился простой язык, который активно используется до сих пор.\nСмысл маркдауна в том, что вы делаете разметку своего документа минимальными усилиями, а уже какой-то другой плагин или программа превращает вашу разметку в итоговый документ — например в HTML. Но можно и не в HTML, а в PDF или что-нибудь ещё. Маркдаун — это как бы язык для других программ, чтобы они формировали документы на основе вашего текста.\nЕдинственное, что вам может понадобиться, — настроить в этом плагине шрифты, отступы и цвета, чтобы результат выглядел красиво. Один раз настраиваете, а потом быстро пишете много материалов, которые на выходе превратятся в готовые статьи с хорошей разметкой.\nКак работает синтаксис Если мы просто напишем текст и разметим его с помощью Markdown, то он так и останется текстом с разными спецсимволами. Чтобы оно работало как нужно, необходимы специальные редакторы, плагины или программы, которые поддерживают этот язык разметки.\nРаботает это так:\n Программа берёт текст и смотрит, есть ли в нём эта разметка. Если есть — применяет нужное правило оформления к нужному фрагменту текста и выводит его красиво. Если нужно — подставит картинку, сделает ссылку и сама оформит список. Если разметки нет — выводит содержимое просто как текст.  Такое работает не в каждом редакторе — если в Word выделить текст звёздочками, то это так и останется текстом со звёздочками, без курсива или жирного оформления. Но почти все редакторы понимают, когда в них вставляют текст, размеченный маркдауном. Они тогда сразу выделяют нужные фрагменты, делают заголовки и вставляют картинки.\nЗачем использовать Markdown Причин несколько.\n Если вам нужно простое оформление текста без изысков или вам нужно быстро подготовить материал к публикации без сложной вёрстки. Если вы делаете блог или другой статичный сайт, на котором хотите размещать свои тексты с лаконичным дизайном. Вы хотите писать красивые сообщения в WhatsApp или Telegram. Вы программист и пишете документацию к своему проекту на GitHub  Но во всех этих случаях вам нужно одно — сделать минимальную вёрстку текста так, чтобы он выглядел опрятно и чтобы его можно было прочитать и без специальных программ.\n","date":1652251119,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1652251119,"objectID":"004fb6d951a853994940affb2cd7e511","permalink":"https://example.com/post/about_markdown/","publishdate":"2022-05-11T09:38:39+03:00","relpermalink":"/post/about_markdown/","section":"post","summary":"Что это и кому нужно?","tags":[],"title":"Язык разметки Markdown.","type":"post"},{"authors":[],"categories":[],"content":"Что нового:  Изучен текстовый редактор vi Изучена командная оболочка Midnight Commander  ","date":1652250663,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1652250663,"objectID":"31dbefadcc567868bc350cd2f57cf531","permalink":"https://example.com/post/week-post-2/","publishdate":"2022-05-11T09:31:03+03:00","relpermalink":"/post/week-post-2/","section":"post","summary":"Пост об очень непростой неделе","tags":[],"title":"Прошедшая неделя 2","type":"post"},{"authors":[],"categories":[],"content":"Системы контроля версий. Общие понятия Системы контроля версий (Version Control System, VCS) применяются при работе нескольких человек над одним проектом. Обычно основное дерево проекта хранится в локальном или удалённом репозитории, к которому настроен доступ для участников проекта. При внесении изменений в содержание проекта система контроля версий позволяет их фиксировать, совмещать изменения, произведённые разными участниками проекта, производить откат к любой более ранней версии проекта, если это требуется.\nВ классических системах контроля версий используется централизованная модель, предполагающая наличие единого репозитория для хранения файлов. Выполнение большинства функций по управлению версиями осуществляется специальным сервером. Участник проекта (пользователь) перед началом работы посредством определённых команд получает нужную ему версию файлов. После внесения изменений, пользователь размещает новую версию в хранилище. При этом предыдущие версии не удаляются из центрального хранилища и к ним можно вернуться в любой момент. Сервер может сохранять не полную версию изменённых файлов, а производить так называемую дельтакомпрессию — сохранять только изменения между последовательными версиями, что позволяет уменьшить объём хранимых данных.\nСистемы контроля версий поддерживают возможность отслеживания и разрешения конфликтов, которые могут возникнуть при работе нескольких человек над одним файлом. Можно объединить (слить) изменения, сделанные разными участниками (автоматически или вручную), вручную выбрать нужную версию, отменить изменения вовсе или заблокировать файлы для изменения. В зависимости от настроек блокировка не позволяет другим пользователям получить рабочую копию или препятствует изменению рабочей копии файла средствами файловой системы ОС, обеспечивая таким образом, привилегированный доступ только одному пользователю, работающему с файлом.\nСистемы контроля версий также могут обеспечивать дополнительные, более гибкие функциональные возможности. Например, они могут поддерживать работу с несколькими версиями одного файла, сохраняя общую историю изменений до точки ветвления версий и собственные истории изменений каждой ветви. Кроме того, обычно доступна информация о том, кто из участников, когда и какие изменения вносил. Обычно такого рода информация хранится в журнале изменений, доступ к которому можно ограничить.\nВ отличие от классических, в распределённых системах контроля версий центральный репозиторий не является обязательным.\nСреди классических VCS наиболее известны CVS, Subversion, а среди распределённых — Git, Bazaar, Mercurial. Принципы их работы схожи, отличаются они в основном синтаксисом используемых в работе команд.\nОсновные команды git – создание основного дерева репозитория:\ngit init\n– получение обновлений (изменений) текущего дерева из центрального репозитория:\ngit pull\n– отправка всех произведённых изменений локального дерева в центральный репозиторий:\ngit push\n– просмотр списка изменённых файлов в текущей директории:\ngit status\n– просмотр текущих изменения:\ngit diff\n– сохранение текущих изменений: – добавить все изменённые и/или созданные файлы и/или каталоги: git add .\n– добавить конкретные изменённые и/или созданные файлы и/или каталоги:\ngit add имена_файлов\n– удалить файл и/или каталог из индекса репозитория (при этом файл и/или каталог остаётся в локальной директории):\ngit rm имена_файлов\n– сохранение добавленных изменений: – сохранить все добавленные изменения и все изменённые файлы:\ngit commit -am \u0026#39;Описание коммита\u0026#39;\n– сохранить добавленные изменения с внесением комментария через встроенный редактор:\ngit commit\n– создание новой ветки, базирующейся на текущей:\ngit checkout -b имя_ветки\n– переключение на некоторую ветку:\ngit checkout имя_ветки\n– отправка изменений конкретной ветки в центральный репозиторий:\ngit push origin имя_ветки\n– слияние ветки с текущим деревом:\ngit merge --no-ff имя_ветки\n– удаление ветки: – удаление локальной уже слитой с основным деревом ветки:\ngit branch -d имя_ветки\n– принудительное удаление локальной ветки:\ngit branch -D имя_ветки\n– удаление ветки с центрального репозитория:\ngit push origin :имя_ветки\nСтандартные процедуры работы при наличии центрального репозитория Работа пользователя со своей веткой начинается с проверки и получения изменений из центрального репозитория (при этом в локальное дерево до начала этой процедуры не должно было вноситься изменений):\ngit checkout master git pull git checkout -b имя_ветки Затем можно вносить изменения в локальном дереве и/или ветке. После завершения внесения какого-то изменения в файлы и/или каталоги проекта необходимо разместить их в центральном репозитории.Для этого необходимо проверить, какие файлы изменились к текущему моменту:\ngit status\nи при необходимости удаляем лишние файлы, которые не хотим отправлять в центральный репозиторий. Затем полезно просмотреть текст изменений на предмет соответствия правилам ведения чистых коммитов:\ngit diff\nЕсли какие-либо файлы не должны попасть в коммит, то …","date":1651730141,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1651730141,"objectID":"a61f77d4a28d739c668289cbe127fa21","permalink":"https://example.com/post/%D1%83%D0%BF%D1%80%D0%B0%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B2%D0%B5%D1%80%D1%81%D0%B8%D1%8F%D0%BC%D0%B8-git/","publishdate":"2022-05-05T08:55:41+03:00","relpermalink":"/post/%D1%83%D0%BF%D1%80%D0%B0%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B2%D0%B5%D1%80%D1%81%D0%B8%D1%8F%D0%BC%D0%B8-git/","section":"post","summary":"Системы контроля версий. Общие понятия Системы контроля версий (Version Control System, VCS) применяются при работе нескольких человек над одним проектом. Обычно основное дерево проекта хранится в локальном или удалённом репозитории, к которому настроен доступ для участников проекта.","tags":[],"title":"Управление Версиями. Git.","type":"post"},{"authors":[],"categories":[],"content":"События недели  Было проделано очень много работы. Вместе с этим погода была благоприятная.  ","date":1651729341,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1651729341,"objectID":"4bb7c925f2b310097eb1b14f5ce4124e","permalink":"https://example.com/post/week-post-1/","publishdate":"2022-05-05T08:42:21+03:00","relpermalink":"/post/week-post-1/","section":"post","summary":"Пост об очень непростой неделе.","tags":[],"title":"Прошедшая неделя","type":"post"},{"authors":["Полина Павлова","吳恩達"],"categories":["Demo","教程"],"content":"Overview  The Wowchemy website builder for Hugo, along with its starter templates, is designed for professional creators, educators, and teams/organizations - although it can be used to create any kind of site The template can be modified and customised to suit your needs. It’s a good platform for anyone looking to take control of their data and online identity whilst having the convenience to start off with a no-code solution (write in Markdown and customize with YAML parameters) and having flexibility to later add even deeper personalization with HTML and CSS You can work with all your favourite tools and apps with hundreds of plugins and integrations to speed up your workflows, interact with your readers, and much more    The template is mobile first with a responsive design to ensure that your site looks stunning on every device.  Get Started  👉 Create a new site 📚 Personalize your site 💬 Chat with the Wowchemy community or Hugo community 🐦 Twitter: @wowchemy @GeorgeCushen #MadeWithWowchemy 💡 Request a feature or report a bug for Wowchemy ⬆️ Updating Wowchemy? View the Update Tutorial and Release Notes  Crowd-funded open-source software To help us develop this template and software sustainably under the MIT license, we ask all individuals and businesses that use it to help support its ongoing maintenance and development via sponsorship.\n❤️ Click here to become a sponsor and help support Wowchemy’s future ❤️ As a token of appreciation for sponsoring, you can unlock these awesome rewards and extra features 🦄✨\nEcosystem  Hugo Academic CLI: Automatically import publications from BibTeX  Inspiration Check out the latest demo of what you’ll get in less than 10 minutes, or view the showcase of personal, project, and business sites.\nFeatures  Page builder - Create anything with widgets and elements Edit any type of content - Blog posts, publications, talks, slides, projects, and more! Create content in Markdown, Jupyter, or RStudio Plugin System - Fully customizable color and font themes Display Code and Math - Code highlighting and LaTeX math supported Integrations - Google Analytics, Disqus commenting, Maps, Contact Forms, and more! Beautiful Site - Simple and refreshing one page design Industry-Leading SEO - Help get your website found on search engines and social media Media Galleries - Display your images and videos with captions in a customizable gallery Mobile Friendly - Look amazing on every screen with a mobile friendly version of your site Multi-language - 34+ language packs including English, 中文, and Português Multi-user - Each author gets their own profile page Privacy Pack - Assists with GDPR Stand Out - Bring your site to life with animation, parallax backgrounds, and scroll effects One-Click Deployment - No servers. No databases. Only files.  Themes Wowchemy and its templates come with automatic day (light) and night (dark) mode built-in. Alternatively, visitors can choose their preferred mode - click the moon icon in the top right of the Demo to see it in action! Day/night mode can also be disabled by the site admin in params.toml.\nChoose a stunning theme and font for your site. Themes are fully customizable.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1607817600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1607817600,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"https://example.com/post/getting-started/","publishdate":"2020-12-13T00:00:00Z","relpermalink":"/post/getting-started/","section":"post","summary":"Welcome 👋 We know that first impressions are important, so we've populated your new site with some initial content to help you get familiar with everything in no time.","tags":["Academic","开源"],"title":"Welcome to Wowchemy, the website builder for Hugo","type":"post"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne  Two  Three   A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}}  Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://example.com/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":null,"categories":null,"content":"Этапы реализации проекта. 1. Размещение на Github pages заготовки для персонального сайта.  Установить необходимое программное обеспечение. Скачать шаблон темы сайта. Разместить его на хостинге git. Установить параметр для URLs сайта. Разместить заготовку сайта на Github pages.  2. Добавить к сайту данные о себе.  Разместить фотографию владельца сайта. Разместить краткое описание владельца сайта (Biography). Добавить информацию об интересах (Interests). Добавить информацию от образовании (Education). Сделать пост по прошедшей неделе. Добавить пост на тему по выбору: Управление версиями. Git.  3. Добавить к сайту достижения.  Добавить информацию о навыках (Skills). Добавить информацию об опыте (Experience). Добавить информацию о достижениях (Accomplishments). Сделать пост по прошедшей неделе. Добавить пост на тему по выбору: Язык разметки Markdown.  4. Добавить к сайту ссылки на научные и библиометрические ресурсы. Зарегистрироваться на соответствующих ресурсах и разместить на них ссылки на сайте:\n eLibrary : https://elibrary.ru/; Google Scholar : https://scholar.google.com/; ORCID : https://orcid.org/; Mendeley : https://www.mendeley.com/; ResearchGate : https://www.researchgate.net/; Academia.edu : https://www.academia.edu/; arXiv : https://arxiv.org/; github : https://github.com/. Сделать пост по прошедшей неделе. Добавить пост на тему по выбору: Оформление отчёта.  5. Добавить с сайту все остальные элементы.  Сделать записи для персональных проектов. Сделать пост по прошедшей неделе. Добавить пост на тему по выбору: Языки научного программирования.  6. Размещение двуязычного сайта на Github.  Сделать поддержку английского и русского языков. Разместить элементы сайта на обоих языках. Разместить контент на обоих языках. Сделать пост по прошедшей неделе. Добавить пост на тему по выбору (на двух языках).  Техническая реализация проекта: Для реализации сайта используется генератор статических сайтов Hugo.\nВ качестве шаблона индивидуального сайта используется шаблон Hugo Academic Theme.\nРезультат работы над проектом: https://terrorochka.github.io\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"e8f8d235e8e7f2efd912bfe865363fc3","permalink":"https://example.com/project/example/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/example/","section":"project","summary":"Пример создания сайта.","tags":["Deep Learning"],"title":"Персональный проект. Создание сайта с помощью Hugo","type":"project"},{"authors":["Полина Павлова","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"ff6a19061a984819d30c916886db56ef","permalink":"https://example.com/publication/example/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/example/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":[],"title":"An example conference paper","type":"publication"}]